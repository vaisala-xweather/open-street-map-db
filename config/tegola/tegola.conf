tile_buffer = 64

[webserver]
hostname = "localhost"
port = ":${TEGOLA_PORT}"              # port to bind the web server to. defaults ":8080"

[cache]                     # configure a tile cache
type = "file"               # a file cache will cache to the local file system
basepath = "/tmp/tegola"    # where to write the file cache

# register data providers
[[providers]]
name = "osm_mvt"       # provider name is referenced from map layers (required)
type = "mvt_postgis"
uri = "postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:${POSTGRES_PRIVATE_PORT}/${POSTGRES_DBNAME}" # PostGIS connection string (required)
srid = 3857                 # The default srid for this provider. Defaults to WebMercator (3857) (optional)
max_connections = 50        # The max connections to maintain in the connection pool. Default is 100. (optional)
    # We explicitly set the geom type to prevent issues if we get a nul geom back
    # see: https://github.com/go-spatial/tegola/issues/779#issuecomment-845618890

    [[providers.layers]]
    name = "continents"
    id_fieldname = "id"
    geometry_fieldname = "geometry"
    geometry_type = "polygon"
    sql = """
        SELECT id, ST_AsMVTGeom(geom,!BBOX!) AS geometry
        FROM public.continents_low
        WHERE geom && !BBOX!
            AND !ZOOM! <= 7
        UNION ALL
        SELECT id, ST_AsMVTGeom(geom,!BBOX!) AS geometry
        FROM public.continents
        WHERE geom && !BBOX!
            AND !ZOOM! > 7
    """

    [[providers.layers]]
    name = "water"
    id_fieldname = "id"
    geometry_fieldname = "geometry"
    geometry_type = "polygon"
    sql = """
        SELECT id, kind, ST_AsMVTGeom(geom,!BBOX!) AS geometry
        FROM public.osm_water_polygons_s
        WHERE geom && !BBOX!
            AND !ZOOM! <= 7
        UNION ALL
        SELECT id, kind, ST_AsMVTGeom(geom,!BBOX!) AS geometry
        FROM public.osm_water_polygons_m
        WHERE geom && !BBOX!
            AND 7 < !ZOOM! AND !ZOOM! <= 9
        UNION ALL
        SELECT id, kind, ST_AsMVTGeom(geom,!BBOX!) AS geometry
        FROM public.osm_water_polygons_l
        WHERE geom && !BBOX!
            AND 9 < !ZOOM! AND !ZOOM! <= 12
        UNION ALL
        SELECT id, kind, ST_AsMVTGeom(geom,!BBOX!) AS geometry
        FROM public.osm_water_polygons
        WHERE geom && !BBOX!
            AND 12 < !ZOOM!

        -- ADD OCEANS
        UNION ALL
        SELECT id, 'ocean' as kind, ST_AsMVTGeom(geom,!BBOX!) AS geometry
        FROM public.osm_oceans_low
        WHERE geom && !BBOX!
            AND !ZOOM! <= 7
        UNION ALL
        SELECT id, 'ocean' as kind, ST_AsMVTGeom(geom,!BBOX!) AS geometry
        FROM public.oceans
        WHERE geom && !BBOX!
            AND !ZOOM! > 7
    """

    [[providers.layers]]
    name = "land"
    id_fieldname = "id"
    geometry_fieldname = "geometry"
    geometry_type = "polygon"
    sql = """
        -- Land Usage Polygons
        SELECT id, kind, ST_AsMVTGeom(geom,!BBOX!) AS geometry
        FROM public.osm_land_z6
        WHERE geom && !BBOX!
            AND !ZOOM! <= 5
        UNION ALL
        SELECT id, kind, ST_AsMVTGeom(geom,!BBOX!) AS geometry
        FROM public.osm_land_z7
        WHERE geom && !BBOX!
            AND 5 < !ZOOM! AND !ZOOM! <= 6
        UNION ALL
        SELECT id, kind, ST_AsMVTGeom(geom,!BBOX!) AS geometry
        FROM public.osm_land_z8
        WHERE geom && !BBOX!
            AND 6 < !ZOOM! AND !ZOOM! <= 7
        UNION ALL
        SELECT id, kind, ST_AsMVTGeom(geom,!BBOX!) AS geometry
        FROM public.osm_land_z9
        WHERE geom && !BBOX!
            AND 7 < !ZOOM! AND !ZOOM! <= 8
        UNION ALL
        SELECT id, kind, ST_AsMVTGeom(geom,!BBOX!) AS geometry
        FROM public.osm_land_z10
        WHERE geom && !BBOX!
            AND 8 < !ZOOM! AND !ZOOM! <= 9
        UNION ALL
        SELECT id, kind, ST_AsMVTGeom(geom,!BBOX!) AS geometry
        FROM public.osm_land_z11
        WHERE geom && !BBOX!
            AND 9 < !ZOOM! AND !ZOOM! <= 10
        UNION ALL
        SELECT id, kind, ST_AsMVTGeom(geom,!BBOX!) AS geometry
        FROM public.osm_land
        WHERE geom && !BBOX!
            AND 10 < !ZOOM!

        -- Piers
        UNION ALL
        SELECT id, kind, ST_AsMVTGeom(geom,!BBOX!) AS geometry
        FROM public.osm_pier_polygons
        WHERE geom && !BBOX!
            AND 12 < !ZOOM!

        -- Aerodromes
        UNION ALL
        SELECT id, kind, ST_AsMVTGeom(geom,!BBOX!) AS geometry
        FROM public.osm_sites_aerodromes
        WHERE kind <> 'aerodrome'
            AND kind <> 'helipad'
            AND kind <> 'heliport'
            AND kind <> 'launch_complex'
            AND geom && !BBOX!
            AND 10 <= !ZOOM!
    """

    [[providers.layers]]
    name = "power_plants"
    id_fieldname = "id"
    geometry_fieldname = "geometry"
    geometry_type = "polygon"
    sql = """
        -- Power plant areas (a type of land use)
        SELECT id, name, energy_source, operator, method, output_power, ST_AsMVTGeom(geom,!BBOX!) AS geometry
        FROM public.osm_power_plants
        WHERE geom && !BBOX!
            AND !ZOOM! >= 8
    """

    [[providers.layers]]
    name = "power_generators"
    id_fieldname = "id"
    geometry_fieldname = "geometry"
    geometry_type = "point"
    sql = """
        -- Power generators (like a wind turbine, solar panel, etc)
        -- TODO: Add operator, model
        SELECT id, name, energy_source, operator, manufacturer, model, solar_tracking, ST_AsMVTGeom(geom,!BBOX!) AS geometry
        FROM public.osm_power_generators
        WHERE geom && !BBOX!
            AND !ZOOM! >= 8
    """

    [[providers.layers]]
    name = "power_lines"
    id_fieldname = "id"
    geometry_fieldname = "geometry"
    geometry_type = "linestring"
    sql = """
        -- Powerlines high voltage (large)
        SELECT id, operator, voltage, frequency, cables, ST_AsMVTGeom(geom,!BBOX!) AS geometry
        FROM public.osm_power_lines
        WHERE geom && !BBOX!
            AND voltage >= 345000
            AND !ZOOM! <= 4
        UNION ALL
        SELECT id, operator, voltage, frequency, cables, ST_AsMVTGeom(geom,!BBOX!) AS geometry
        FROM public.osm_power_lines
        WHERE geom && !BBOX!
            AND voltage >= 200000
            AND 4 < !ZOOM! AND !ZOOM! <= 5
        UNION ALL
        SELECT id, operator, voltage, frequency, cables, ST_AsMVTGeom(geom,!BBOX!) AS geometry
        FROM public.osm_power_lines
        WHERE geom && !BBOX!
            AND 5 < !ZOOM!
    """

    [[providers.layers]]
    name = "wind_farm_bounds"
    id_fieldname = "cluster_id"
    geometry_fieldname = "geometry"
    geometry_type = "polygon"
    sql = """
        --- Tegola requires a wrapping select statement
        --- TODO: This is very inefficient and doesn't query based on BBOX
        SELECT * FROM (
            WITH clusters AS (
                SELECT
                    project_name,
                    ST_ClusterDBSCAN(geom, eps => 10000, minpoints => 1) OVER (PARTITION BY project_name) AS cluster_id,
                    geom
                FROM
                    public.osm_power_generators
                WHERE
                    project_name IS NOT NULL
            )
            SELECT
				row_number() OVER(ORDER BY project_name, cluster_id) AS id,
                cluster_id,
                project_name,
                ST_AsMVTGeom(ST_Buffer(ST_ConvexHull(ST_Collect(geom)), 250), !BBOX!) AS geometry
            FROM
                clusters
            GROUP BY
                cluster_id, project_name
            WHERE
                geom && !BBOX!
        )
    """

    [[providers.layers]]
    name = "wind_farm_centroids"
    id_fieldname = "cluster_id"
    geometry_fieldname = "geometry"
    geometry_type = "point"
    sql = """
        SELECT * FROM (
            WITH clusters AS (
                SELECT
                    project_name,
					year_online,
					capacity_mw,
                    ST_ClusterDBSCAN(geom, eps => 10000, minpoints => 1) OVER (PARTITION BY project_name) AS cluster_id,
                    geom
                FROM
                    public.usgs_power_wind_generators
                WHERE
                    project_name IS NOT NULL
            )
            , project_polys as (
                SELECT
                    row_number() OVER(ORDER BY project_name, cluster_id) AS id,
                    cluster_id,
                    project_name,
					SUM(capacity_mw) as est_capacity_mw,
                    ST_Buffer(ST_ConvexHull(ST_Collect(geom)), 250) AS geom
                FROM
                    clusters
                GROUP BY
                    cluster_id, project_name
            )
            SELECT
				row_number() OVER(ORDER BY project_name) AS id,
                project_name,
				MAX(est_capacity_mw) as est_capacity_mw,
                ST_AsMVTGeom(ST_Centroid(ST_Collect(geom)), !BBOX!) AS geometry
            FROM
                project_polys
			GROUP BY project_name
            WHERE
                geom && !BBOX!
        )
    """

    # [[providers.layers]]
    # # This layer needs to be manually fetched and loaded into
    # # postgresql in the public schema from
    # # https://osmdata.openstreetmap.de/data/water-polygons.html
    # name = "coastlines"
    # geometry_fieldname = "geometry"
    # id_fieldname = "id"
    # srid = 4326

    # sql = "SELECT ST_AsMVTGeom(geometry,!BBOX!) AS geometry, id FROM public.osm_waterareas WHERE geometry && !BBOX!"
    # geometry_type = "MultiPolygon"

    # [[providers.layers]]
    # name = "admin-2"
    # geometry_fieldname = "geometry"
    # id_fieldname = "id"
    # srid = 4326

    # sql = "SELECT ST_AsMVTGeom(geometry,!BBOX!) AS geometry, id, name FROM public.osm_admin WHERE admin_level=2 AND geometry && !BBOX!"
    # geometry_type = "polygon"

    # [[providers.layers]]
    # name = "admin-3"
    # geometry_fieldname = "geometry"
    # id_fieldname = "id"
    # srid = 4326

    # sql = "SELECT ST_AsMVTGeom(geometry,!BBOX!) AS geometry, id, name FROM public.osm_admin WHERE admin_level=3 AND geometry && !BBOX!"
    # geometry_type = "polygon"

    # [[providers.layers]]
    # name = "admin-4"
    # geometry_fieldname = "geometry"
    # id_fieldname = "id"
    # srid = 4326

    # sql = "SELECT ST_AsMVTGeom(geometry,!BBOX!) AS geometry, id, name FROM public.osm_admin WHERE  admin_level=4 AND geometry && !BBOX!"
    # geometry_type = "polygon"

    # [[providers.layers]]
    # name = "admin-5"
    # geometry_fieldname = "geometry"
    # id_fieldname = "id"
    # srid = 4326

    # sql = "SELECT ST_AsMVTGeom(geometry,!BBOX!) AS geometry, id, name FROM public.osm_admin WHERE  admin_level=5 AND geometry && !BBOX!"
    # geometry_type = "polygon"

    # [[providers.layers]]
    # name = "admin-6"
    # geometry_fieldname = "geometry"
    # id_fieldname = "id"
    # srid = 4326

    # sql = "SELECT ST_AsMVTGeom(geometry,!BBOX!) AS geometry, id, name FROM public.osm_admin WHERE  admin_level=6 AND geometry && !BBOX!"
    # geometry_type = "polygon"

    # [[providers.layers]]
    # name = "buildings"
    # geometry_fieldname = "geometry"
    # id_fieldname = "id"
    # srid = 4326
    # tablename = "public.osm_buildings"
    # # > 0 removes some bogus very large building areas
    # sql = "SELECT ST_AsMVTGeom(geometry,!BBOX!) AS geometry, id FROM public.osm_buildings WHERE geometry && !BBOX!"
    # geometry_type = "MultiPolygon"

    # [[providers.layers]]
    # name = "motorways"
    # geometry_fieldname = "geometry"
    # id_fieldname = "id"
    # srid = 4326
    # sql = "SELECT ST_AsMVTGeom(geometry,!BBOX!) AS geometry, type, id FROM public.osm_roads WHERE type in ('motorway', 'motorway_link') and geometry && !BBOX!"
    # geometry_type = "linestring"

    # [[providers.layers]]
    # name = "roads"
    # geometry_fieldname = "geometry"
    # id_fieldname = "id"
    # srid = 4326
    # sql = "SELECT ST_AsMVTGeom(geometry,!BBOX!) AS geometry, type, id FROM public.osm_roads WHERE type not in ('motorway', 'motorway_link') and geometry && !BBOX!"
    # geometry_type = "linestring"

    # # [[providers.layers]]
    # # name = "railways"
    # # geometry_fieldname = "geometry"
    # # id_fieldname = "id"
    # # srid = 4326
    # # sql = "SELECT ST_AsMVTGeom(geometry,!BBOX!) AS geometry, id FROM public.osm_railways WHERE geometry && !BBOX!"
    # # geometry_type = "linestring"

    # [[providers.layers]]
    # name = "rivers"
    # geometry_fieldname = "geometry"
    # id_fieldname = "id"
    # srid = 4326
    # sql = "SELECT ST_AsMVTGeom(geometry,!BBOX!) AS geometry, id FROM public.osm_waterways WHERE type='river' AND geometry && !BBOX!"
    # geometry_type = "linestring"

    # [[providers.layers]]
    # name = "streams"
    # geometry_fieldname = "geometry"
    # id_fieldname = "id"
    # srid = 4326
    # sql = "SELECT ST_AsMVTGeom(geometry,!BBOX!) AS geometry, id FROM public.osm_waterways WHERE type='streams' AND geometry && !BBOX!"
    # geometry_type = "linestring"

    # [[providers.layers]]
    # name = "places"
    # geometry_fieldname = "geometry"
    # id_fieldname = "id"
    # srid = 4326
    # sql = "SELECT ST_AsMVTGeom(geometry,!BBOX!) AS geometry, type, name, id FROM public.osm_places WHERE type not in ('hamlet', 'village', 'suburb', 'locality') and geometry && !BBOX!"
    # geometry_type = "point"

    # [[providers.layers]]
    # name = "places-small"
    # geometry_fieldname = "geometry"
    # id_fieldname = "id"
    # srid = 4326
    # sql = "SELECT ST_AsMVTGeom(geometry,!BBOX!) AS geometry, type, name, id FROM public.osm_places WHERE type in ('hamlet', 'village', 'suburb', 'locality') and geometry && !BBOX!"
    # geometry_type = "point"

    # [[providers.layers]]
    # name = "power-polygons"
    # geometry_fieldname = "geometry"
    # id_fieldname = "osm_id"
    # srid = 4326
    # sql = "SELECT ST_AsMVTGeom(geometry,!BBOX!) AS geometry, use, name, power, substation, operator, osm_id FROM public.osm_power_polygons WHERE geometry && !BBOX!"
    # geometry_type = "polygon"

    # [[providers.layers]]
    # name = "power-transmission-lines"
    # geometry_fieldname = "geometry"
    # id_fieldname = "osm_id"
    # srid = 4326
    # sql = "SELECT ST_AsMVTGeom(geometry,!BBOX!) AS geometry, osm_id, type, substation, voltage, ref, operator,location FROM public.osm_power_transmission_lines WHERE geometry && !BBOX!"
    # geometry_type = "linestring"


    # [[providers.layers]]
    # name = "water"
    # geometry_fieldname = "geometry"
    # id_fieldname = "id"
    # srid = 4326
    # sql = "SELECT ST_AsMVTGeom(geometry,!BBOX!) AS geometry, id FROM public.osm_landusages WHERE type = 'water' AND geometry && !BBOX!"
    # geometry_type = "polygon"

    # [[providers.layers]]
    # name = "parks"
    # geometry_fieldname = "geometry"
    # id_fieldname = "id"
    # srid = 4326
    # sql = "SELECT ST_AsMVTGeom(geometry,!BBOX!) AS geometry, id FROM public.osm_landusages WHERE type='park' AND geometry && !BBOX!"
    # geometry_type = "polygon"

# maps are made up of layers
[[maps]]
name = "mvt_world"
tile_buffer = 64

    [[maps.layers]]
    provider_layer = "osm_mvt.continents"
    min_zoom = 0
    max_zoom = 14

    # [[maps.layers]]
    # provider_layer = "osm_mvt.oceans"
    # min_zoom = 0
    # max_zoom = 14

    [[maps.layers]]
    provider_layer = "osm_mvt.water"
    min_zoom = 0
    max_zoom = 14

    [[maps.layers]]
    provider_layer = "osm_mvt.land"
    min_zoom = 0
    max_zoom = 14

    # [[maps.layers]]
    # # It can also be used to group multiple ProviderLayers under the same namespace.
    # provider_layer = "mvt_db.coastlines"  # must match a data provider layer
    # min_zoom = 0                            # minimum zoom level to include this layer
    # max_zoom = 24

    # [[maps.layers]]
    # # It can also be used to group multiple ProviderLayers under the same namespace.
    # provider_layer = "mvt_db.admin-2"  # must match a data provider layer
    # min_zoom = 1                            # minimum zoom level to include this layer
    # max_zoom = 24

    # [[maps.layers]]
    # # It can also be used to group multiple ProviderLayers under the same namespace.
    # provider_layer = "mvt_db.admin-3"  # must match a data provider layer
    # min_zoom = 1                            # minimum zoom level to include this layer
    # max_zoom = 24

    # [[maps.layers]]
    # # It can also be used to group multiple ProviderLayers under the same namespace.
    # provider_layer = "mvt_db.admin-4"  # must match a data provider layer
    # min_zoom = 2                            # minimum zoom level to include this layer
    # max_zoom = 24

    # [[maps.layers]]
    # # It can also be used to group multiple ProviderLayers under the same namespace.
    # provider_layer = "mvt_db.admin-5"  # must match a data provider layer
    # min_zoom = 4                            # minimum zoom level to include this layer
    # max_zoom = 24

    # [[maps.layers]]
    # # It can also be used to group multiple ProviderLayers under the same namespace.
    # provider_layer = "mvt_db.admin-6"  # must match a data provider layer
    # min_zoom = 4                            # minimum zoom level to include this layer
    # max_zoom = 24

    # [[maps.layers]]
    # # It can also be used to group multiple ProviderLayers under the same namespace.
    # provider_layer = "mvt_db.buildings"  # must match a data provider layer
    # min_zoom = 12                               # minimum zoom level to include this layer
    # max_zoom = 24

    # [[maps.layers]]
    # # It can also be used to group multiple ProviderLayers under the same namespace.
    # provider_layer = "mvt_db.motorways"  # must match a data provider layer
    # min_zoom = 5                            # minimum zoom level to include this layer
    # max_zoom = 24

    # [[maps.layers]]
    # # It can also be used to group multiple ProviderLayers under the same namespace.
    # provider_layer = "mvt_db.roads"  # must match a data provider layer
    # min_zoom = 10                            # minimum zoom level to include this layer
    # max_zoom = 24

    # # [[maps.layers]]
    # # # It can also be used to group multiple ProviderLayers under the same namespace.
    # # provider_layer = "mvt_db.railways"  # must match a data provider layer
    # # min_zoom = 5                            # minimum zoom level to include this layer
    # # max_zoom = 24

    # [[maps.layers]]
    # # It can also be used to group multiple ProviderLayers under the same namespace.
    # provider_layer = "mvt_db.rivers"  # must match a data provider layer
    # min_zoom = 10                            # minimum zoom level to include this layer
    # max_zoom = 24

    # [[maps.layers]]
    # # It can also be used to group multiple ProviderLayers under the same namespace.
    # provider_layer = "mvt_db.streams"  # must match a data provider layer
    # min_zoom = 10                            # minimum zoom level to include this layer
    # max_zoom = 24

    # [[maps.layers]]
    # # It can also be used to group multiple ProviderLayers under the same namespace.
    # provider_layer = "mvt_db.places"  # must match a data provider layer
    # min_zoom = 5                            # minimum zoom level to include this layer
    # max_zoom = 24

    # [[maps.layers]]
    # # Villages, hamlets etc.
    # provider_layer = "mvt_db.places-small"  # must match a data provider layer
    # min_zoom = 12                            # minimum zoom level to include this layer
    # max_zoom = 24

    # [[maps.layers]]
    # # Power stations
    # provider_layer = "mvt_db.power-polygons"  # must match a data provider layer
    # min_zoom = 8                            # minimum zoom level to include this layer
    # max_zoom = 24

    # [[maps.layers]]
    # # Power transmission lines
    # provider_layer = "mvt_db.power-transmission-lines"  # must match a data provider layer
    # min_zoom = 8                            # minimum zoom level to include this layer
    # max_zoom = 24

    # [[maps.layers]]
    # # It can also be used to group multiple ProviderLayers under the same namespace.
    # provider_layer = "mvt_db.water"  # must match a data provider layer
    # min_zoom = 6                            # minimum zoom level to include this layer
    # max_zoom = 24

    # [[maps.layers]]
    # # It can also be used to group multiple ProviderLayers under the same namespace.
    # provider_layer = "mvt_db.parks"  # must match a data provider layer
    # min_zoom = 10                            # minimum zoom level to include this layer
    # max_zoom = 24

[[maps]]
name = "mvt_power"
tile_buffer = 64

[[maps.layers]]
    provider_layer = "osm_mvt.power_plants"
    min_zoom = 0
    max_zoom = 14

    [[maps.layers]]
    provider_layer = "osm_mvt.power_generators"
    min_zoom = 0
    max_zoom = 14

    [[maps.layers]]
    provider_layer = "osm_mvt.power_lines"
    min_zoom = 0
    max_zoom = 14

    # [[maps.layers]]
    # provider_layer = "osm_mvt.wind_farm_bounds"
    # min_zoom = 0
    # max_zoom = 14
