networks:
  open-street-map:

x-definitions:
  region: &region monaco

services:
  db:
    image: postgis/postgis:17-3.5
    volumes:
      - ./scripts/init-postgis-maps.sh:/docker-entrypoint-initdb.d/99-maps.sh:ro
      - ./data/db:/var/lib/postgresql/data:rw
    shm_size: 2GB
    environment:
      - POSTGRES_USER=${POSTGRES_ADMIN_USER}
      - POSTGRES_PASSWORD=${POSTGRES_ADMIN_PASSWORD}
      - POSTGRES_MAPS_USER=${POSTGRES_MAPS_USER}
      - POSTGRES_MAPS_PASSWORD=${POSTGRES_MAPS_PASSWORD}
      - POSTGRES_MAPS_DB=${POSTGRES_MAPS_DB}
    ports:
      - "5432:5432"
    networks:
      - open-street-map
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d ${POSTGRES_MAPS_DB} -U ${POSTGRES_MAPS_USER}"]
      interval: 5s
      timeout: 30s
      retries: 5
      start_period: 15s

  import:
    build:
      context: .
      dockerfile: Dockerfile.osm2pgsql
    image: four43/osm2pgsql:stable
    environment:
      LUA_PATH: /config/osm2pgsql-themepark/lua/?.lua;;
      THEMEPARK_PATH: "/config/osm2pgsql-themepark:/config/xweather-themepark/themes"
      # THEMEPARK_DEBUG: "true"
      # For importing via org2ogr
      PGHOST: db
      POSTGRES_MAPS_DB: ${POSTGRES_MAPS_DB}
      PGUSER: ${POSTGRES_MAPS_USER}
      PGPASSWORD: ${POSTGRES_MAPS_PASSWORD}
    volumes:
      - ./config/osm2pgsql:/config:ro
      - ./scripts:/scripts:ro
      - ./data/downloads/:/data:rw
      # - ./data/downloads/minnesota.osm.pbf:/osm.pbf:ro
      # - ./data/downloads/us-midwest.osm.pbf:/osm.pbf:ro
      # - ./data/downloads/north-america.osm.pbf:/osm.pbf:ro
      - ./data/downloads/world.osm.pbf:/osm.pbf:ro
      - ./data/import-cache:/cache:rw
    networks:
      - open-street-map
    depends_on:
      db:
        condition: service_healthy
    command:
      - --create
      - --output=flex
      - --hstore
      - --slim
      - --cache
      - "4096"
      - -S
      - /config/style-power-only.lua
      - -d
      - 'postgresql://${POSTGRES_MAPS_USER}:${POSTGRES_MAPS_PASSWORD}@db/${POSTGRES_MAPS_DB}'
      - /osm.pbf


  import-extra:
    extends: import
    entrypoint:
      - /scripts/download-import-misc.sh
      - /data
    command: !override []

  # Generates simplified geometry tables for lower resolution queries to improve
  # performance for large scale maps
  import-gen:
    extends: import
    environment:
      OSM2PGSQL_GEN: full
    entrypoint: osm2pgsql-gen
    command:
      - -d
      - 'postgresql://${POSTGRES_MAPS_USER}:${POSTGRES_MAPS_PASSWORD}@db/${POSTGRES_MAPS_DB}'
      - -S
      - /config/style-power-only.lua

  tile-server:
    image: gospatial/tegola:edge
    entrypoint: /opt/tegola
    command: serve --config /config/tegola.conf
    volumes:
      # :z needed on systems like fedora using selinux
      # when using host mounted volumes
      - ./config/tegola:/config:z
      - ./data/tile-cache:/tmp/tegola:z
    depends_on:
      - db
    ports:
      - 9090:9090
    networks:
      - open-street-map
    environment:
      - POSTGRES_USER=${POSTGRES_MAPS_USER}
      - POSTGRES_PASSWORD=${POSTGRES_MAPS_PASSWORD}
      - POSTGRES_DBNAME=${POSTGRES_MAPS_DB}
      - POSTGRES_PRIVATE_PORT=5432
      - POSTGRES_HOST=db
      - TEGOLA_PORT=9090
    restart: unless-stopped

  tile-cache:
    extends: tile-server
    command: cache seed --config /config/tegola.conf --overwrite --bounds "-117.25,32.5,-117.0,32.75" --min-zoom 0 --max-zoom 14
    ports: !override []
    restart: no

  tile-flatten:
    build:
      context: .
      dockerfile: Dockerfile.gdal
    volumes:
      - ./data:/data:rw
      - ./scripts:/scripts:r
    networks:
      - open-street-map
    entrypoint:
    command: /scripts/flatten-tiles.sh
    depends_on:
      # We query the Tegola server for some metadata information
      - tile-server

